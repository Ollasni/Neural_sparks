version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: bi_gpt_postgres
    environment:
      POSTGRES_DB: bi_gpt_db
      POSTGRES_USER: bi_gpt_user
      POSTGRES_PASSWORD: bi_gpt_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - bi_gpt_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bi_gpt_user -d bi_gpt_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Основное приложение BI-GPT Agent
  app:
    build: .
    container_name: bi_gpt_app
    ports:
      - "8501:8501"  # Streamlit
      - "8000:8000"  # FastAPI (если используется)
    environment:
      # Database
      DATABASE_URL: postgresql://bi_gpt_user:bi_gpt_password@postgres:5432/bi_gpt_db
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: bi_gpt_db
      POSTGRES_USER: bi_gpt_user
      POSTGRES_PASSWORD: bi_gpt_password
      
      # OpenAI API (замените на ваши ключи)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-your_openai_api_key_here}
      
      # Streamlit настройки
      STREAMLIT_SERVER_PORT: 8501
      STREAMLIT_SERVER_ADDRESS: 0.0.0.0
      STREAMLIT_SERVER_HEADLESS: true
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: false
      
      # Python настройки
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./schema.json:/app/schema.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bi_gpt_network
    restart: unless-stopped

  # Redis для кэширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: bi_gpt_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bi_gpt_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  bi_gpt_network:
    driver: bridge
