#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–∞ SQL –∑–∞–ø—Ä–æ—Å–æ–≤
–†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sys
import os
sys.path.append(os.path.dirname(__file__))

def demo_risk_analysis():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–∞ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö SQL –∑–∞–ø—Ä–æ—Å–æ–≤"""
    
    print("üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–∞ SQL –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("=" * 50)
    
    try:
        from advanced_sql_validator import validate_sql_query, RiskLevel
        print("‚úÖ –ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è: {e}")
        return
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ SQL –∑–∞–ø—Ä–æ—Å—ã —Å —Ä–∞–∑–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º —Ä–∏—Å–∫–∞
    test_queries = [
        {
            "sql": "SELECT * FROM customers LIMIT 100",
            "description": "–ü—Ä–æ—Å—Ç–æ–π SELECT - –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫"
        },
        {
            "sql": "SELECT c.name, SUM(s.revenue) FROM customers c JOIN sales s ON c.id = s.customer_id GROUP BY c.id",
            "description": "–°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å JOIN - —Å—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫"
        },
        {
            "sql": "DELETE FROM customers WHERE id = 1",
            "description": "DELETE –∑–∞–ø—Ä–æ—Å - –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫"
        },
        {
            "sql": "DROP TABLE customers",
            "description": "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        },
        {
            "sql": "SELECT * FROM customers WHERE name = 'test' OR 1=1",
            "description": "SQL –∏–Ω—ä–µ–∫—Ü–∏—è - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∏—Å–∫"
        }
    ]
    
    for i, test_case in enumerate(test_queries, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {test_case['description']}")
        print(f"SQL: {test_case['sql']}")
        print("-" * 30)
        
        try:
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∏—Å–∫
            analysis = validate_sql_query(test_case['sql'])
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–∫–æ–Ω–∫—É –∏ —Ü–≤–µ—Ç
            risk_icon = "‚ùì"
            risk_color = "#6c757d"
            risk_text = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
            if analysis.risk_level == RiskLevel.LOW:
                risk_icon = "‚úÖ"
                risk_color = "#28a745"
                risk_text = "–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫"
            elif analysis.risk_level == RiskLevel.MEDIUM:
                risk_icon = "‚ö†Ô∏è"
                risk_color = "#ffc107"
                risk_text = "–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫"
            elif analysis.risk_level == RiskLevel.HIGH:
                risk_icon = "üî∂"
                risk_color = "#fd7e14"
                risk_text = "–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫"
            elif analysis.risk_level == RiskLevel.CRITICAL:
                risk_icon = "üö®"
                risk_color = "#dc3545"
                risk_text = "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∏—Å–∫"
            
            print(f"{risk_icon} –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {risk_text}")
            print(f"üìä –°–ª–æ–∂–Ω–æ—Å—Ç—å: {analysis.complexity_score}")
            print(f"üîó JOIN'–æ–≤: {analysis.join_count}")
            print(f"üìã –ü–æ–¥–∑–∞–ø—Ä–æ—Å–æ–≤: {analysis.subquery_count}")
            print(f"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {analysis.validation_result.value}")
            
            if analysis.warnings:
                print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
                for warning in analysis.warnings[:3]:
                    print(f"  ‚Ä¢ {warning}")
            
            if analysis.errors:
                print("‚ùå –û—à–∏–±–∫–∏:")
                for error in analysis.errors[:3]:
                    print(f"  ‚Ä¢ {error}")
            
            if analysis.recommendations:
                print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
                for rec in analysis.recommendations[:3]:
                    print(f"  ‚Ä¢ {rec}")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
        
        print()

def demo_model_parameters():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏"""
    
    print("\nüéõÔ∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏")
    print("=" * 50)
    
    print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print("‚Ä¢ Temperature (0.0 - 2.0):")
    print("  - 0.0 = –î–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
    print("  - 0.3 = –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
    print("  - 0.7 = –ö—Ä–µ–∞—Ç–∏–≤–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
    print("  - 1.0+ = –û—á–µ–Ω—å —Å–ª—É—á–∞–π–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è")
    
    print("\n‚Ä¢ Max Tokens (50 - 1000):")
    print("  - 200 = –ö–æ—Ä–æ—Ç–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã")
    print("  - 400 = –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
    print("  - 600 = –°–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
    print("  - 800+ = –û—á–µ–Ω—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
    
    print("\nüîß –ë—ã—Å—Ç—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("‚Ä¢ üéØ Precise (0.0, 200) - –¥–ª—è —Ç–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("‚Ä¢ ‚öñÔ∏è Balanced (0.3, 400) - –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("‚Ä¢ üé® Creative (0.7, 600) - –¥–ª—è –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π")
    print("‚Ä¢ üöÄ Complex (0.1, 800) - –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üöÄ BI-GPT Agent - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")
    print("=" * 60)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–∞
    demo_risk_analysis()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏
    demo_model_parameters()
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ Streamlit –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
    print("   streamlit run streamlit_app.py")
    print("\nüìã –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
    print("‚Ä¢ üîç –ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–∞ –¥–ª—è –≤—Å–µ—Ö SQL –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("‚Ä¢ üéõÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏ (temperature, max_tokens)")
    print("‚Ä¢ ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("‚Ä¢ üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
    print("‚Ä¢ üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é")

if __name__ == "__main__":
    main()

